#!/usr/bin/env bash
set -euo pipefail

echo "üíæ === Raspberry Pi Offsite Backup Setup ==="

# --- üß† User input with defaults ---
read -rp "üë§ –í–≤–µ–¥–∏ —ñ–º'—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –¥–ª—è rsync [backup]: " USER
USER=${USER:-backup}

read -rp "üìÇ –í–≤–µ–¥–∏ —Ç–æ—á–∫—É –º–æ–Ω—Ç—É–≤–∞–Ω–Ω—è SSD [/mnt/backupdisk]: " MOUNT_POINT
MOUNT_POINT=${MOUNT_POINT:-/mnt/backupdisk}

read -rsp "üîë –í–≤–µ–¥–∏ –ø–∞—Ä–æ–ª—å –¥–ª—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ $USER (–æ–±–æ–≤‚Äô—è–∑–∫–æ–≤–æ): " PASS
echo
if [[ -z "$PASS" ]]; then
    echo "‚ùå –ü–∞—Ä–æ–ª—å –Ω–µ –º–æ–∂–µ –±—É—Ç–∏ –ø–æ—Ä–æ–∂–Ω—ñ–º."
    exit 1
fi

echo "============================================="
echo "üßæ –ü–∞—Ä–∞–º–µ—Ç—Ä–∏:"
echo "   –Ü–º‚Äô—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞: $USER"
echo "   –¢–æ—á–∫–∞ –º–æ–Ω—Ç—É–≤–∞–Ω–Ω—è: $MOUNT_POINT"
echo "============================================="

# --- üîç Detect external disk ---
DISK=$(lsblk -ndo NAME,TRAN | awk '$2=="usb"{print "/dev/"$1; exit}')

if [[ -z "${DISK}" ]]; then
    echo "‚ùå –ù–µ –∑–Ω–∞–π–¥–µ–Ω–æ –∂–æ–¥–Ω–æ–≥–æ USB-–¥–∏—Å–∫—É. –ü—ñ–¥–∫–ª—é—á–∏ SSD —ñ –ø–æ–≤—Ç–æ—Ä–∏."
    exit 1
fi
if [[ "$DISK" == *mmcblk0* ]]; then
    echo "üö´ –û–±—Ä–∞–Ω–æ —Å–∏—Å—Ç–µ–º–Ω—É SD-–∫–∞—Ä—Ç—É ($DISK). –ó—É–ø–∏–Ω—è—é—Å—å, —â–æ–± –Ω–µ —Å—Ç–µ—Ä—Ç–∏ —Å–∏—Å—Ç–µ–º—É."
    exit 1
fi
echo "‚úÖ –ó–Ω–∞–π–¥–µ–Ω–æ –¥–∏—Å–∫: $DISK"

# --- ‚öôÔ∏è Ask about formatting ---
FSTYPE=$(lsblk -no FSTYPE "$DISK" | head -n1)
if [[ -n "$FSTYPE" ]]; then
    echo "‚ÑπÔ∏è  –ù–∞ –¥–∏—Å–∫—É $DISK –≤–∂–µ —î —Ñ–∞–π–ª–æ–≤a —Å–∏—Å—Ç–µ–º–∞: $FSTYPE"
else
    echo "‚ö†Ô∏è  –ù–∞ –¥–∏—Å–∫—É $DISK –Ω–µ–º–∞—î —Ñ–∞–π–ª–æ–≤–æ—ó —Å–∏—Å—Ç–µ–º–∏."
fi

read -rp "–•–æ—á–µ—à –≤—ñ–¥—Ñ–æ—Ä–º–∞—Ç—É–≤–∞—Ç–∏ —Ü–µ–π –¥–∏—Å–∫ —É ext4 (—Å—Ç–µ—Ä—Ç–∏ –≤—Å—ñ –¥–∞–Ω—ñ)? (yes/NO): " confirm
if [[ "${confirm,,}" == "yes" ]]; then
    echo "üßπ –§–æ—Ä–º–∞—Ç—É—é –¥–∏—Å–∫ —É ext4..."
    sudo umount -f "${DISK}"* || true
    sudo mkfs.ext4 -F -L BACKUPDISK "$DISK"
    echo "‚úÖ –î–∏—Å–∫ –≤—ñ–¥—Ñ–æ—Ä–º–∞—Ç–æ–≤–∞–Ω–æ."
else
    echo "üö´ –ü—Ä–æ–ø—É—Å–∫–∞—é —Ñ–æ—Ä–º–∞—Ç—É–≤–∞–Ω–Ω—è. –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞—Ç–∏–º—É —ñ—Å–Ω—É—é—á—É —Ñ–∞–π–ª–æ–≤—É —Å–∏—Å—Ç–µ–º—É."
fi

# --- üìé Get UUID ---
UUID=$(sudo blkid -s UUID -o value "$DISK")
if [[ -z "$UUID" ]]; then
    echo "‚ùå –ù–µ –≤–¥–∞–ª–æ—Å—è –∑–Ω–∞–π—Ç–∏ UUID. –ú–æ–∂–ª–∏–≤–æ, –¥–∏—Å–∫ –Ω–µ –≤—ñ–¥—Ñ–æ—Ä–º–∞—Ç–æ–≤–∞–Ω–∏–π?"
    exit 1
fi
echo "üìé UUID –¥–∏—Å–∫—É: $UUID"

# --- üìÇ Mount setup ---
sudo mkdir -p "$MOUNT_POINT"

if ! grep -q "$UUID" /etc/fstab; then
    echo "üìÑ –î–æ–¥–∞—é –∑–∞–ø–∏—Å —É /etc/fstab..."
    echo "UUID=$UUID  $MOUNT_POINT  ext4  defaults,noatime  0  2" | sudo tee -a /etc/fstab
fi

echo "üîÑ –ú–æ–Ω—Ç—É—î–º–æ –¥–∏—Å–∫..."
sudo mount -a

# --- üë§ Create user ---
if ! id "$USER" >/dev/null 2>&1; then
    echo "üë§ –°—Ç–≤–æ—Ä—é—é –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ $USER..."
    sudo adduser --disabled-password --gecos "" "$USER"
fi
sudo chown -R "$USER:$USER" "$MOUNT_POINT"

# --- ‚öôÔ∏è Rsync daemon configuration ---
echo "üìù –°—Ç–≤–æ—Ä—é—é /etc/rsyncd.conf..."
sudo tee /etc/rsyncd.conf >/dev/null <<EOF
uid = $USER
gid = $USER
use chroot = no
max connections = 2
log file = /var/log/rsyncd.log
timeout = 300

[backup]
   path = $MOUNT_POINT
   comment = Backup module
   read only = false
   auth users = $USER
   secrets file = /etc/rsyncd.secrets
EOF

# --- üîë Secrets ---
echo "üîë –°—Ç–≤–æ—Ä—é—é /etc/rsyncd.secrets..."
echo "$USER:$PASS" | sudo tee /etc/rsyncd.secrets >/dev/null
sudo chmod 600 /etc/rsyncd.secrets
sudo chown root:root /etc/rsyncd.secrets

# --- üîÑ Enable daemon ---
echo "üöÄ –í—Å—Ç–∞–Ω–æ–≤–ª—é—é rsync..."
sudo apt-get update -y && sudo apt-get install -y rsync

echo "üîÑ –ó–∞–ø—É—Å–∫–∞—é rsync daemon..."
sudo systemctl enable rsync
sudo systemctl restart rsync

echo "‚úÖ –í—Å–µ –≥–æ—Ç–æ–≤–æ!"
echo "---------------------------------------------"
echo "Rsync daemon –ø—Ä–∞—Ü—é—î –Ω–∞ –ø–æ—Ä—Ç—ñ 873"
echo "–ú–æ–¥—É–ª—å: backup"
echo "–®–ª—è—Ö: $MOUNT_POINT"
echo "–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á: $USER"
echo "–ü–∞—Ä–æ–ª—å: $PASS"
echo "---------------------------------------------"