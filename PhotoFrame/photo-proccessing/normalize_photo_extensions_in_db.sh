#!/bin/bash
#
# === normalize_db_extensions.sh ===
# –°–∫—Ä–∏–ø—Ç –¥–ª—è –Ω–æ—Ä–º–∞–ª—ñ–∑–∞—Ü—ñ—ó —Ä–æ–∑—à–∏—Ä–µ–Ω—å —É –±–∞–∑—ñ SQLite (—Ç–∞–±–ª–∏—Ü—è file, –ø–æ–ª–µ extension).
# 1. –°—Ç–≤–æ—Ä—é—î —Ä–µ–∑–µ—Ä–≤–Ω—É –∫–æ–ø—ñ—é
# 2. –í–∏–¥–∞–ª—è—î –¥—É–±–ª—ñ–∫–∞—Ç–∏ (–∑–∞–ª–∏—à–∞—î —Ä—è–¥–æ–∫ –∑ –º—ñ–Ω—ñ–º–∞–ª—å–Ω–∏–º file_id)
# 3. –ü—Ä–∏–≤–æ–¥–∏—Ç—å —Ä–æ–∑—à–∏—Ä–µ–Ω–Ω—è –¥–æ –Ω–∏–∂–Ω—å–æ–≥–æ —Ä–µ–≥—ñ—Å—Ç—Ä—É
#
# –í–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è:
#   ./normalize_db_extensions.sh pictureframe.db3           # —Ä–µ–∞–ª—å–Ω–µ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è
#   ./normalize_db_extensions.sh pictureframe.db3 --dry-run # –ø–æ–∫–∞–∑–∞—Ç–∏, –±–µ–∑ –∑–º—ñ–Ω
#

DB=""
DRYRUN=0

# —Ä–æ–∑–±—ñ—Ä –∞—Ä–≥—É–º–µ–Ω—Ç—ñ–≤
for arg in "$@"; do
    case "$arg" in
        --dry-run) DRYRUN=1 ;;
        *) DB="$arg" ;;
    esac
done

if [[ -z "$DB" ]]; then
    echo "‚ùå –ü–æ–º–∏–ª–∫–∞: –ø–æ—Ç—Ä—ñ–±–Ω–æ –≤–∫–∞–∑–∞—Ç–∏ —à–ª—è—Ö –¥–æ –±–∞–∑–∏ –¥–∞–Ω–∏—Ö"
    exit 1
fi

if [[ ! -f "$DB" ]]; then
    echo "‚ùå –ü–æ–º–∏–ª–∫–∞: –±–∞–∑–∞ –¥–∞–Ω–∏—Ö $DB –Ω–µ —ñ—Å–Ω—É—î"
    exit 1
fi

# --- –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –Ω–∞—è–≤–Ω–æ—Å—Ç—ñ sqlite3 ---
if ! command -v sqlite3 &>/dev/null; then
    echo "‚ÑπÔ∏è sqlite3 –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ. –°–ø—Ä–æ–±–∞ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è..."

    if command -v apt-get &>/dev/null; then
        sudo apt-get update && sudo apt-get install -y sqlite3
    elif command -v dnf &>/dev/null; then
        sudo dnf install -y sqlite
    elif command -v apk &>/dev/null; then
        sudo apk add sqlite
    elif command -v brew &>/dev/null; then
        brew install sqlite
    else
        echo "‚ùå –ù–µ –≤–¥–∞–ª–æ—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ –≤—Å—Ç–∞–Ω–æ–≤–∏—Ç–∏ sqlite3. –í—Å—Ç–∞–Ω–æ–≤–∏ –≤—Ä—É—á–Ω—É."
        exit 1
    fi
fi

# === Dry-run —Ä–µ–∂–∏–º ===
if [[ $DRYRUN -eq 1 ]]; then
    echo "üîç Dry-run: –ø–æ—à—É–∫ –¥—É–±–ª—ñ–∫–∞—Ç—ñ–≤..."

    DUP_COUNT=$(sqlite3 "$DB" "
        SELECT COUNT(*) FROM (
          SELECT folder_id, basename, lower(extension), COUNT(*) AS cnt
          FROM file
          GROUP BY folder_id, basename, lower(extension)
          HAVING cnt > 1
        );")
    echo "üóëÔ∏è –ë—É–ª–æ –± –≤–∏–¥–∞–ª–µ–Ω–æ –¥—É–±–ª—ñ–∫–∞—Ç—ñ–≤ –≥—Ä—É–ø: $DUP_COUNT"

    if [[ "$DUP_COUNT" -gt 0 ]]; then
        sqlite3 "$DB" "
            SELECT folder_id, basename, group_concat(extension), COUNT(*) 
            FROM file
            GROUP BY folder_id, basename, lower(extension)
            HAVING COUNT(*) > 1
            LIMIT 50;" | sed 's/|/  |  /g'
        echo "‚ÑπÔ∏è –ü–æ–∫–∞–∑–∞–Ω—ñ –ø–µ—Ä—à—ñ 50 –≥—Ä—É–ø –¥—É–±–ª—ñ–∫–∞—Ç—ñ–≤"
    fi

    TO_UPDATE=$(sqlite3 "$DB" \
        "SELECT COUNT(*) FROM file WHERE extension != lower(extension);")
    echo "üîç –†—è–¥–∫—ñ–≤ –¥–ª—è –æ–Ω–æ–≤–ª–µ–Ω–Ω—è: $TO_UPDATE"

    if [[ "$TO_UPDATE" -gt 0 ]]; then
        sqlite3 "$DB" "
            SELECT file_id, extension, lower(extension) AS new_ext 
            FROM file 
            WHERE extension != lower(extension) 
            LIMIT 50;" | sed 's/|/  |  /g'
        echo "‚ÑπÔ∏è –ü–æ–∫–∞–∑–∞–Ω—ñ –ø–µ—Ä—à—ñ 50 —Ä—è–¥–∫—ñ–≤ –¥–ª—è –æ–Ω–æ–≤–ª–µ–Ω–Ω—è"
    fi

    echo "üëâ –¶–µ –±—É–≤ dry-run. –†–µ–∞–ª—å–Ω–∏—Ö –∑–º—ñ–Ω –Ω–µ –∑—Ä–æ–±–ª–µ–Ω–æ."
    exit 0
fi

# === –†–µ–∞–ª—å–Ω–∏–π —Ä–µ–∂–∏–º ===
# —Ä–µ–∑–µ—Ä–≤–Ω–∞ –∫–æ–ø—ñ—è
BACKUP="${DB}.bak.$(date +%Y%m%d%H%M%S)"
cp "$DB" "$BACKUP"
echo "üì¶ –†–µ–∑–µ—Ä–≤–Ω—É –∫–æ–ø—ñ—é —Å—Ç–≤–æ—Ä–µ–Ω–æ: $BACKUP"

# –≤–∏–¥–∞–ª–µ–Ω–Ω—è –¥—É–±–ª—ñ–∫–∞—Ç—ñ–≤
DELETED=$(sqlite3 "$DB" "
    DELETE FROM file 
    WHERE file_id NOT IN (
      SELECT MIN(file_id)
      FROM file
      GROUP BY folder_id, basename, lower(extension)
    );
    SELECT changes();")
echo "üóëÔ∏è –í–∏–¥–∞–ª–µ–Ω–æ —Ä—è–¥–∫—ñ–≤: $DELETED"

# –Ω–æ—Ä–º–∞–ª—ñ–∑–∞—Ü—ñ—è —Ä–æ–∑—à–∏—Ä–µ–Ω—å
UPDATED=$(sqlite3 "$DB" "
    UPDATE file 
    SET extension = lower(extension) 
    WHERE extension != lower(extension);
    SELECT changes();")
echo "‚úÖ –û–Ω–æ–≤–ª–µ–Ω–æ —Ä—è–¥–∫—ñ–≤: $UPDATED"